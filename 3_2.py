from sympy import Symbol, solve
from sympy.plotting import plot
import matplotlib.pyplot as plt
import numpy as np 

print("------------------------------4번------------------------------")
print("두 행렬 A,B에 대하여 다음 방정식을 X에 대하여 풀어라.")
A = np.array([[1,2],
              [3,4]])
B = np.array([[-1,0],
               [1,1]])
print('2(A-B+X) = 3(X-A)\n')

print('∴ X는 다음과 같다.')
print(5*A-2*B)


print("------------------------------7번------------------------------")
print('가능하다면, B를 다른 행렬들의 일차 결합으로 나타내어라.')

B = [[3,1,1],
     [0,1,0]]
A1 = [[1,0,-1],
      [0,1, 0]]
A2 = [[-1,2,0],
      [ 0,1,0]]
A3 = [[1,1,1],
      [0,0,0]]

print(" B = ")
for i in B:
    print('     ',i)
print(" A1 = ")
for i in A1:
    print('     ',i)
print(" A2 = ")
for i in A2:
    print('     ',i)
print(" A3 = ")
for i in A3:
    print('     ',i)

c1 = Symbol('c1')
c2 = Symbol('c2')
c3 = Symbol('c3')

e1 = 1*c1 - 1*c2 + 1*c3 - 3 
e2 = 0*c1 + 2*c2 + 1*c3 - 1
e3 = -1*c1 + 0*c2 + 1*c3 - 1
e4 = 0*c1 + 0*c2 + 0*c3 - 0
e5 = 1*c1 + 1*c2 + 0*c3 - 1
e6 = 0*c1 + 0*c2 + 0*c3 - 0

print()
print(' ∴ ' + str(solve([e1,e2,e3,e4,e5,e6])))
print(' ∴ c1*A1 + c2*A2 + c3*A3 = B가 성립하는 값이 없기 때문에 일차결합이 아니다.')

print("------------------------------16번------------------------------")
print('주어진 행렬들이 일차독립인지, 일차종속인지를 결정하여라.')


c1 = Symbol('c1')
c2 = Symbol('c2')
c3 = Symbol('c3')
c4 = Symbol('c4')

e1 = 1*c1 + 2*c2 + 1*c3 - 1*c4 
e2 = -1*c1 + 1*c2 + 2*c3 + 1*c4
e3 = 0*c1 + 0*c2 + 0*c3 + 0*c4
e4 = 0*c1 + 0*c2 + 0*c3 + 0*c4
e5 = 2*c1 + 3*c2 + 1*c3 - 1*c4
e6 = 0*c1 + 0*c2 + 0*c3 + 0*c4
e7 = 0*c1 + 0*c2 + 0*c3 + 0*c4
e8 = 2*c1 + 4*c2 + 3*c3 + 0*c4
e9 = 6*c1 + 9*c2 + 5*c3 - 4*c4

print(' ∴ ' + str(solve([e1,e2,e3,e4,e5,e6,e7,e8,e9])))
print('행렬들의 일차결합을 나타낼 수 있는 경우는 모든 스칼라가 0인 경우 뿐이므로 주어진 행렬들은 일차독립이다.')

print("------------------------------29번------------------------------")
print('두 상삼각행렬들의 곱도 상삼각행렬임을 보여라.')
A = np.array([[1,2,3,4,5],
              [0,1,2,3,4],
              [0,0,1,2,3],
              [0,0,0,1,2],
              [0,0,0,0,1]])
B = np.array([[1,2,3,4,5],
              [0,1,2,3,4],
              [0,0,1,2,3],
              [0,0,0,1,2],
              [0,0,0,0,1]])
print(A*B)



print("------------------------------37번------------------------------")
print('다음의 행렬에서 교대행렬인 것은 무엇인가? \n\n※ 교대행렬은 전치행렬과 행렬에 음의 스칼라를 곱한 결과가 같은 행렬을 말한다.')
print(' \n(a)')
A = np.array([[1,2],
             [-2,3]])
print('A^t와 -A의 일치여부 :',np.allclose(A.T,-A))
print(' ∴ 교대행렬이 아니다.')

print(' \n(b)')
A = np.array([[0,-1],
              [1, 0]])
print('A^t와 -A의 일치여부 :',np.allclose(A.T,-A))
print(' ∴ 교대행렬이다.')

print(' \n(c)')
A = np.array([[0,3,-1],
             [-3,0, 2],
             [1,-2, 0]])
print('A^t와 -A의 일치여부 :',np.allclose(A.T,-A))
print(' ∴ 교대행렬이다.')

print(' \n(d)')
A = np.array([[0,1,2],
             [-1,0,5],
             [ 2,5,0]])
print('A^t와 -A의 일치여부 :',np.allclose(A.T,-A))
print(' ∴ 교대행렬이 아니다.')